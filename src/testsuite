#!/usr/bin/perl
#

use IPC::Open2;

use strict;

my $FH;
my $WHITESPACE_REGEXP= '^\s*(#.*)?$';

my $GOLF_SHELL_IN;
my $GOLF_SHELL_OUT;
my $GOLF_SHELL_COMMAND= 'gforth golf_shell.fs 2>/dev/null';
my $GOLF_SHELL_REGEXP= '^golf\\$';

my $TESTCOUNT=0;

my @files=glob '../testsuite/*gs';
@files= @ARGV if( @ARGV );

foreach( @files )
{
    print "$_\n";

    open $FH, $_ or die "unable to open file: $!";

    while(&process_input_output) { };

    close $FH;
}

print "\n$TESTCOUNT testcases OK\n";

sub process_input_output
{
    my $input= &next_none_empty;
    chomp $input;

    return unless $input;

    my $output= &lines_until_expr($FH,$WHITESPACE_REGEXP);

    die "found no output lines for input: $input" unless $output;


    &open_golf_shell;
    print $GOLF_SHELL_IN "$input\n";
    close $GOLF_SHELL_IN ;

    &lines_until_expr($GOLF_SHELL_OUT, $GOLF_SHELL_REGEXP);

    my $golf_return= &lines_until_expr($GOLF_SHELL_OUT, $GOLF_SHELL_REGEXP);

    die "no golfscript output for input: $input" unless $golf_return;

    my $golf_output= join ',', @$golf_return;
    my $file_output= join ',', @$output;
    
    if( $golf_output ne $file_output )
    {
        print STDERR "got: '$golf_output'\n";
        print STDERR "expected '$file_output'\n";
        die "died becuase of testerror for input: $input\n";
    }

    print "$input -> $golf_output OK\n";
    $TESTCOUNT++;
}


sub next_none_empty
{
    while( my $line = <$FH> )
    {
        return $line if( not $line =~ /$WHITESPACE_REGEXP/ )
    }

    return undef;
}

sub lines_until_expr
{
    my($fh,$expr)= @_;

    my @lines= ();
    while( my $line = <$fh> )
    {
        if( $line =~ /$expr/ )
        {
            return undef if( scalar (@lines )== 0 );
            return \@lines;
        }
        chomp $line;
        push @lines, $line;
    }

    return undef if( scalar( @lines ) == 0 );
    return \@lines;
}


sub open_golf_shell
{
    open2($GOLF_SHELL_OUT, $GOLF_SHELL_IN, $GOLF_SHELL_COMMAND )or die "unable to open golf shell: $!";
}
